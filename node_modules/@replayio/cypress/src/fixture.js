"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.appendToFixtureFile = exports.initFixtureFile = void 0;
const fs_1 = require("fs");
const path_1 = __importDefault(require("path"));
function getFixtureFile() {
    return (process.env.REPLAY_CYPRESS_FIXTURE_FILE ||
        // TODO [ryanjduffy] - This assumes we're running in dist/src directory and
        // walks back up to put the fixture.log near driver.ts. This would be a
        // weird default if we asked users to run this so this logic should be
        // smarter.
        path_1.default.resolve(__filename, "../../../tests/fixtures/fixture.log"));
}
function initFixtureFile() {
    if (process.env.REPLAY_CYPRESS_UPDATE_FIXTURE) {
        try {
            (0, fs_1.mkdirSync)(path_1.default.dirname(getFixtureFile()), { recursive: true });
            (0, fs_1.writeFileSync)(getFixtureFile(), "");
        }
        catch (e) {
            console.error(e);
            process.env.REPLAY_CYPRESS_UPDATE_FIXTURE = undefined;
        }
    }
}
exports.initFixtureFile = initFixtureFile;
function appendToFixtureFile(type, value) {
    if (process.env.REPLAY_CYPRESS_UPDATE_FIXTURE) {
        try {
            (0, fs_1.appendFileSync)(getFixtureFile(), JSON.stringify({ type, value }) + "\n");
        }
        catch (e) {
            console.error(e);
            process.env.REPLAY_CYPRESS_UPDATE_FIXTURE = undefined;
        }
    }
}
exports.appendToFixtureFile = appendToFixtureFile;
//# sourceMappingURL=fixture.js.map